import telebot
import random
import os.path

config = {
    "name": "Python_waran_bot",
    "token": "5737862312:AAEjHoaa-Gzxr3JbJx6TzRzBu32Q3NbbppY"
}
ivan = telebot.TeleBot(config["token"])

# @ivan.message_handler(content_types=["text"])
# def get_text(message):
#     if message.text == "Hello" or message.text == "üòÑ":
#         ivan.send_message(message.chat.id, "Hello user")
#
# ivan.polling(none_stop=True, interval=0)


# --------------------------------------------------------------------------------------------------------------------


nameUser = ""


@ivan.message_handler(content_types=["text"])
def get_text(message):
    if message.text == "Hello":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "Hello"), get_text_1)
    elif message.text.lower() == "–º–∞–≥—ñ—á–Ω–∏–π —à–∞—Ä":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–ó–∞–¥–∞–π—Ç–µ –ø–∏—Ç–∞–Ω–Ω—è"), magic_bol)
    elif message.text.lower() == "–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–∞—Ä–Ω—ñ—Å—Ç—å":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏"), get_text_isd)
    elif message.text.lower() == "–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–ª—ñ–Ω–¥—Ä–æ–º":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏"), polindrom)
    elif message.text.lower() == "–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –¥—ñ—é"), kalkulator)
    elif message.text.lower() == "—â–∞—Å–ª–∏–≤–∏–π –±—ñ–ª–µ—Ç":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –±—ñ–ª–µ—Ç—É"), bil)
    elif message.text.lower() == "—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è —Ç–∞ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ '/'"), registration)
    elif message.text.lower() == "–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è —Ç–∞ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ '/' –¥–ª—è –≤—Ö–ª–¥—É —É —Å–∏—Å—Ç–µ–º—É —á–∞—Ç–±–æ—Ç–∞"), authorization)


def magic_bol(message):
    answers = ["–ù–µ –¥—É–∂–µ", "–ó–≤—ñ—Å–Ω–æ", "–ù—ñ", "–ú—Ä—ñ–π", "100%", "–í—ñ—Ä–∏–º–æ –≤ –∫—Ä–∞—â–µ"]
    ivan.send_message(message.chat.id, random.choice(answers))


def get_text_1(message):
    if message == "Hello":
        if nameUser:
            ivan.send_message(message.chat.id, f"Hello, {nameUser}")
        else:
            name = ivan.send_message(message.chat.id, "What is your name?")
            ivan.register_message_handler(name, meet)


def get_text_isd(message):                                      # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏—Å–ª–∞ –Ω–∞ –ø–∞—Ä–Ω—ñ—Å—Ç—å
    if message.text.isdigit():
        if int(message.text) % 2 == 0:
            ivan.send_message(message.chat.id, f"{message.text} —Ü–µ –ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ")
        else:
            ivan.send_message(message.chat.id, f"{message.text} —Ü–µ –Ω–µ–ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ")
    else:
        ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Ü–∏—Ñ—Ä–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è")


def polindrom(message):                                         # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏—Å–ª–∞ –Ω–∞ –ø–æ–ª—ñ–Ω–¥—Ä–æ–º
    if message.text == message.text[::-1]:
        ivan.send_message(message.chat.id, f"{message.text} —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è —î –ø–æ–ª—ñ–Ω–¥—Ä–æ–º–æ–º")
    else:
        ivan.send_message(message.chat.id, f"{message.text} —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ —î –ø–æ–ª—ñ–Ω–¥—Ä–æ–º–æ–º")


def meet(message):
    global nameUser
    nameUser = message.text


def bil(message):
    one = message.text[0:int(len(message.text) / 2)]
    two = message.text[int(len(message.text) / 2)::]
    one_rez, two_rez = 0, 0
    for i in range(len(one)):
        one_rez += int(one[i])
        two_rez += int(two[i])
    if one_rez == two_rez:
        ivan.send_message(message.chat.id, f"{message.text} —â–∞—Å–ª–∏–≤–∏–π –±—ñ–ª–µ—Ç")
    else:
        ivan.send_message(message.chat.id, f"{message.text} –Ω–µ —â–∞—Å–ª–∏–≤–∏–π –±—ñ–ª–µ—Ç")


def registration(message):                                  # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É —Å–∏—Å—Ç–µ–º—ñ
    path = os.path.join("data_base", "T_b.txt")
    file = open(path, "r", encoding='utf-8')
    all_users = file.read().split("\n")
    file.close()
    rez = message.text.split("/")
    var_var = 0
    for el in all_users:                                    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ç–∞–∫–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π
        var = el.split("/")
        if var[0] == rez[0]:
            var_var = 1
            break
    if var_var == 0:
        file = open(path, "a", encoding='utf-8')
        file.write(f"{message.text}\n")
        file.close()
        ivan.send_message(message.chat.id, f"–í—ñ—Ç–∞—é {rez[0]}, –≤–∞—Å —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ —É —Å–∏—Å—Ç–µ–º—ñ ")
    else:
        ivan.send_message(message.chat.id, f"–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {rez[0]} –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π —É —Å–∏—Å—Ç–µ–º—ñ")


def authorization(message):                                     # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É —Å–∏—Å—Ç–µ–º—ñ
    path = os.path.join("data_base", "T_b.txt")
    file = open(path, "r", encoding='utf-8')
    log_pass = file.read().split("\n")
    rez = message.text.split("/")
    if message.text in log_pass:
        ivan.send_message(message.chat.id, f"{rez[0]}, –≤—ñ—Ç–∞—î–º–æ —É —Å–∏—Å—Ç–µ–º—ñ")
    else:
        ivan.send_message(message.chat.id, f"–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å.")




def kalkulator(message):
    try:
        num_lst, znak_lst, var = [], [], ""  # –°–ø–∏—Å–∫–∏ –¥–ª—è —á–∏—Å–µ–ª —Ç–∞ –¥—ñ–π
        if message.text[0].isdigit():
            var_one_znak = "+"
        else:
            message.text = message.text[1::]
            var_one_znak = "-"

        def diya(el, ind, var_znak):
            znak_lst.remove(el)
            num_lst.pop(ind)
            num_lst.pop(ind)
            num_lst.insert(ind, var_znak)

        for el in message.text:
            if el == " ":  # –í–∏–¥–∞–ª—è—î–º–æ –ø—Ä–æ–±—ñ–ª–∏, —è–∫—â–æ –≤–æ–Ω–∏ —î
                continue
            elif el.isdigit():
                var = var + el  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–æ–≤–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è —á–∏—Å–ª–∞ —Ç–∞ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —á–∏—Å—Å–µ–ª –±—ñ–ª—å—à–µ 9
            else:
                num_lst.append(int(var))  # –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Å–ø–∏—Å–∫–∞ —á–∏—Å–µ–ª
                var = ""
                znak_lst.append(el)  # –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Å–ø–∏—Å–∫–∞ –¥—ñ–π
        num_lst.append(int(var))  # –í–Ω–µ—Å–µ–Ω–Ω—è —É —Å–ø–∏—Å–æ–∫ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ —á–∏—Å–ª–∞ –≤–∏—Ä–∞–∑—É

        if var_one_znak == "-":
            var_one_znak = -int(num_lst[0])
            num_lst.pop(0)
            num_lst.insert(0, var_one_znak)

        num_zn = len(znak_lst)
        count = 0
        while count <= num_zn:
            for el in znak_lst:
                count += 1
                if el == "*":
                    for ind in range(len(znak_lst)):  # –ü—Ä–æ—Ö–æ–¥–∏–º–æ—Å—å –ø–æ –¥–æ–≤–∂–∏–Ω—ñ —Å–ø–∏—Å–∫–∞ –¥—ñ–π
                        if znak_lst[ind] == "*":  # –ü–æ–¥–∞–ª—å—à–∞ —É–º–æ–≤–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è - –≤–∏—Ä–∞–∑ –º–Ω–æ–∂–µ–Ω–Ω—è —É —Å–ø–∏—Å–∫—É –¥—ñ–π
                            var_znak = num_lst[ind] * num_lst[
                                ind + 1]  # –ú–Ω–æ–∂–∏–º–æ —Ü–∏—Ñ—Ä–∏ —É —Å–ø–∏—Å–∫—É —á–∏—Å–µ–ª —è–∫—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å —ñ–Ω–¥–µ–∫—Å—É –∑–Ω–∞–∫–∞ –º–Ω–æ–∂–µ–Ω–Ω—è —É —Å–ø–∏—Å–∫—É –¥—ñ–π —Ç–∞ (—ñ–Ω–¥–µ–∫—Å—É + 1)
                            diya(el, ind, var_znak)  # –í–Ω–æ—Å–∏–º–æ —É —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏—Ä–∞–∑—É –≤–∏–¥–∞–ª–µ–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å
                            break
                elif el == "/":
                    for ind in range(len(znak_lst)):
                        if znak_lst[ind] == "/":
                            var_znak = num_lst[ind] / num_lst[ind + 1]
                            diya(el, ind, var_znak)
                            count += 1

        while "+" in znak_lst or "-" in znak_lst:
            for ind in range(num_zn):
                if znak_lst[ind] == "+":
                    el, var_znak = "+", num_lst[ind] + num_lst[ind + 1]
                    diya(el, ind, var_znak)
                    break
                elif znak_lst[ind] == "-":
                    el, var_znak = "-", num_lst[ind] - num_lst[ind + 1]
                    diya(el, ind, var_znak)
                    break
        print(message.text, "=", num_lst[0])
        ivan.send_message(message.chat.id, f"{message.text} = {num_lst[0]}")
    except:
        ivan.send_message(message.chat.id, "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –≤–≤–µ–¥–µ–Ω—è")

ivan.polling(none_stop=True, interval=0)
