import telebot
import random
import os.path

config = {
    "name": "Python_waran_bot",
    "token": "5737862312:AAEjHoaa-Gzxr3JbJx6TzRzBu32Q3NbbppY"
}
ivan = telebot.TeleBot(config["token"])

# @ivan.message_handler(content_types=["text"])
# def get_text(message):
#     if message.text == "Hello" or message.text == "üòÑ":
#         ivan.send_message(message.chat.id, "Hello user")
#
# ivan.polling(none_stop=True, interval=0)


# --------------------------------------------------------------------------------------------------------------------


nameUser = ""


@ivan.message_handler(content_types=["text"])
def get_text(message):
    if message.text == "Hello":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "Hello"), get_text_1)
    elif message.text.lower() == "–º–∞–≥—ñ—á–Ω–∏–π —à–∞—Ä":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–ó–∞–¥–∞–π—Ç–µ –ø–∏—Ç–∞–Ω–Ω—è"), magic_bol)
    elif message.text.lower() == "–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–∞—Ä–Ω—ñ—Å—Ç—å":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏"), get_text_isd)
    elif message.text.lower() == "–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–ª—ñ–Ω–¥—Ä–æ–º":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏"), polindrom)
    elif message.text.lower() == "–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –¥—ñ—é"), kalkulator)
    elif message.text.lower() == "—â–∞—Å–ª–∏–≤–∏–π –±—ñ–ª–µ—Ç":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –±—ñ–ª–µ—Ç—É"), bil)
    elif message.text.lower() == "—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è —Ç–∞ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ '/'"), registration)
    elif message.text.lower() == "–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è":
        ivan.register_next_step_handler(ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è —Ç–∞ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ '/' –¥–ª—è –≤—Ö–ª–¥—É —É —Å–∏—Å—Ç–µ–º—É —á–∞—Ç–±–æ—Ç–∞"), authorization)


def magic_bol(message):
    answers = ["–ù–µ –¥—É–∂–µ", "–ó–≤—ñ—Å–Ω–æ", "–ù—ñ", "–ú—Ä—ñ–π", "100%", "–í—ñ—Ä–∏–º–æ –≤ –∫—Ä–∞—â–µ"]
    ivan.send_message(message.chat.id, random.choice(answers))


def get_text_1(message):
    if message == "Hello":
        if nameUser:
            ivan.send_message(message.chat.id, f"Hello, {nameUser}")
        else:
            name = ivan.send_message(message.chat.id, "What is your name?")
            ivan.register_message_handler(name, meet)


def get_text_isd(message):                                      # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏—Å–ª–∞ –Ω–∞ –ø–∞—Ä–Ω—ñ—Å—Ç—å
    if message.text.isdigit():
        if int(message.text) % 2 == 0:
            ivan.send_message(message.chat.id, f"{message.text} —Ü–µ –ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ")
        else:
            ivan.send_message(message.chat.id, f"{message.text} —Ü–µ –Ω–µ–ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ")
    else:
        ivan.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å —Ü–∏—Ñ—Ä–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è")


def polindrom(message):                                         # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏—Å–ª–∞ –Ω–∞ –ø–æ–ª—ñ–Ω–¥—Ä–æ–º
    if message.text == message.text[::-1]:
        ivan.send_message(message.chat.id, f"{message.text} —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è —î –ø–æ–ª—ñ–Ω–¥—Ä–æ–º–æ–º")
    else:
        ivan.send_message(message.chat.id, f"{message.text} —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ —î –ø–æ–ª—ñ–Ω–¥—Ä–æ–º–æ–º")


def meet(message):
    global nameUser
    nameUser = message.text


def kalkulator(message):
    sp = ""
    for i in message.text:
        if i != " ":
            sp += i
    lst_zx = ["+", "-", "*", "/"]
    rez = []
    zn = []
    for el in sp:
        if el in lst_zx:
            rez = sp.split(el)
            zn.append(el)
    if zn[0] == "+":
        rez_fn = int(rez[0]) + int(rez[1])
        ivan.send_message(message.chat.id, f"{message.text} = {rez_fn}")
    if zn[0] == "-":
        rez_fn = int(rez[0]) - int(rez[1])
        ivan.send_message(message.chat.id, f"{message.text} = {rez_fn}")
    if zn[0] == "/":
        rez_fn = int(rez[0]) / int(rez[1])
        ivan.send_message(message.chat.id, f"{message.text} = {rez_fn}")
    if zn[0] == "*":
        rez_fn = int(rez[0]) * int(rez[1])
        ivan.send_message(message.chat.id, f"{message.text} = {rez_fn}")


def bil(message):
    one = message.text[0:int(len(message.text) / 2)]
    two = message.text[int(len(message.text) / 2)::]
    one_rez, two_rez = 0, 0
    for i in range(len(one)):
        one_rez += int(one[i])
        two_rez += int(two[i])
    if one_rez == two_rez:
        ivan.send_message(message.chat.id, f"{message.text} —â–∞—Å–ª–∏–≤–∏–π –±—ñ–ª–µ—Ç")
    else:
        ivan.send_message(message.chat.id, f"{message.text} –Ω–µ —â–∞—Å–ª–∏–≤–∏–π –±—ñ–ª–µ—Ç")


def registration(message):                                  # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É —Å–∏—Å—Ç–µ–º—ñ
    path = os.path.join("data_base", "T_b.txt")
    file = open(path, "r", encoding='utf-8')
    all_users = file.read().split("\n")
    file.close()
    rez = message.text.split("/")
    var_var = 0
    for el in all_users:                                    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ç–∞–∫–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π
        var = el.split("/")
        if var[0] == rez[0]:
            var_var = 1
            break
    if var_var == 0:
        file = open(path, "a", encoding='utf-8')
        file.write(f"{message.text}\n")
        file.close()
        ivan.send_message(message.chat.id, f"–í—ñ—Ç–∞—é {rez[0]}, –≤–∞—Å —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ —É —Å–∏—Å—Ç–µ–º—ñ ")
    else:
        ivan.send_message(message.chat.id, f"–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {rez[0]} –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π —É —Å–∏—Å—Ç–µ–º—ñ")


def authorization(message):                                     # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É —Å–∏—Å—Ç–µ–º—ñ
    path = os.path.join("data_base", "T_b.txt")
    file = open(path, "r", encoding='utf-8')
    log_pass = file.read().split("\n")
    rez = message.text.split("/")
    if message.text in log_pass:
        ivan.send_message(message.chat.id, f"{rez[0]}, –≤—ñ—Ç–∞—î–º–æ —É —Å–∏—Å—Ç–µ–º—ñ")
    else:
        ivan.send_message(message.chat.id, f"–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å.")
ivan.polling(none_stop=True, interval=0)
